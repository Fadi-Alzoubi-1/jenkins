spring.application.name=store
spring.profiles.active=dev
#Database
#spring.datasource.url=jdbc:mysql://mysql-server:3306/products?useSSL=false&serverTimezone=UTC
spring.datasource.url=jdbc:mysql://mysql-container:3306/products
spring.datasource.username=root
spring.datasource.password=root
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

#JPA
spring.jpa.show-sql= true
spring.jpa.generate-ddl=true
spring.jpa.hibernate.ddl-auto=update
spring.jpa.properties.hibernate.ddl-auto=drop
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL8Dialect
#Logs
logging.file.path=../ 
logging.file.name=logs/application.log 
#Security
#spring.security.user.name=fadi
#spring.security.user.password=fadi
spring.datasource.hikari.maximum-pool-size=10
spring.datasource.hikari.connection-timeout=30000
logging.level.org.springframework.security=TRACE

#spring.security.oauth2.client.registration.google.redirect-uri=login/oauth2/code/google
spring.security.oauth2.client.registration.google.client-id=''
spring.security.oauth2.client.registration.google.client-secret=''
management.endpoints.web.exposure.include=health,info,metrics

# Circuit Breaker settings for microservice
resilience4j.circuitbreaker.instances.microservice.failureRateThreshold=50
resilience4j.circuitbreaker.instances.microservice.waitDurationInOpenState=5000
resilience4j.circuitbreaker.instances.microservice.permittedNumberOfCallsInHalfOpenState=2
resilience4j.circuitbreaker.instances.microservice.slidingWindowSize=10
resilience4j.circuitbreaker.instances.microservice.minimumNumberOfCalls=5
resilience4j.circuitbreaker.instances.microservice.slowCallRateThreshold=70
resilience4j.circuitbreaker.instances.microservice.slowCallDurationThreshold=2000
#
## Kubernetes service configuration
#server.port=8080
#spring.application.name=microservice
spring.cloud.kubernetes.discovery.enabled=true
#
## Kubernetes API Endpoint for service discovery
#spring.cloud.kubernetes.discovery.service-labels.app=microservice
#spring.cloud.kubernetes.discovery.all-namespaces=false
#
## Kubernetes connection timeout settings
spring.cloud.kubernetes.client.connection-timeout=5000
spring.cloud.kubernetes.client.request-timeout=5000
#
## Docker Container Host and Port
#microservice.docker.host=localhost
#microservice.docker.port=8080
#
## Kubernetes Load Balancer
#microservice.k8s.service.name=microservice-service
#microservice.k8s.service.port=80

# ========== Logging ==========
logging.level.org.springframework=INFO
logging.level.com.yourpackage=DEBUG

# ========== Kubernetes Configuration ==========
spring.cloud.kubernetes.enabled=true

spring.cloud.kubernetes.client.namespace=default

# ========== Docker & Kubernetes Specific ==========
spring.config.import=optional:configtree:/etc/config/
